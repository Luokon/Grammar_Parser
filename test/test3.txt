PROGRAM -> BLOCK
BLOCK -> CONST_DECLARATION VAR_DECLARATION PROCEDURE_DECLARATION STATEMENT
CONST_DECLARATION -> CONST_DEFINITION_LIST ;
CONST_DEFINITION_LIST -> CONST_DEFINITION { , CONST_DEFINITION }
CONST_DEFINITION -> IDENTIFIER = NUMBER
VAR_DECLARATION -> VAR IDENTIFIER_LIST ;
IDENTIFIER_LIST -> IDENTIFIER {, IDENTIFIER}
PROCEDURE_DECLARATION -> PROCEDURE IDENTIFIER ; BLOCK ;
STATEMENT -> ASSIGN_STATEMENT | IF_STATEMENT | WHILE_STATEMENT | CALL_STATEMENT | READ_STATEMENT | WRITE_STATEMENT | COMPOUND_STATEMENT
ASSIGN_STATEMENT -> IDENTIFIER := EXPRESSION
IF_STATEMENT -> IF CONDITION THEN STATEMENT [ELSE STATEMENT]
WHILE_STATEMENT -> WHILE CONDITION DO STATEMENT
CALL_STATEMENT -> CALL IDENTIFIER
READ_STATEMENT -> READ IDENTIFIER
WRITE_STATEMENT -> WRITE EXPRESSION
COMPOUND_STATEMENT -> BEGIN STATEMENT_LIST END
STATEMENT_LIST -> STATEMENT {; STATEMENT}
CONDITION -> EXPRESSION RELATIONAL_OPERATOR EXPRESSION
EXPRESSION -> + TERM {ADDITIVE_OPERATOR TERM} | - TERM { ADDITIVE_OPERATOR TERM }
TERM -> FACTOR {MULTIPLICATIVE_OPERATOR FACTOR}
FACTOR -> IDENTIFIER | NUMBER | ( EXPRESSION )
RELATIONAL_OPERATOR -> = | <> | < | <= | > | >=
ADDITIVE_OPERATOR -> + | -
MULTIPLICATIVE_OPERATOR -> * | /
IDENTIFIER -> LETTER {LETTER | DIGIT}
NUMBER -> DIGIT {DIGIT}
LETTER -> a | b | c | d | e | f | g | h | i | j | k | l | m | n | o | p | q | r | s | t | u | v | w | x | y | z | A | B | C | D | E | F | G | H | I | J | K | L | M | N | O | P | Q | R | S | T | U | V | W | X | Y | Z
DIGIT -> 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9